{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasmakdessi/Desktop/Blockchain/Mentorship/capstone/aggregator/src/components/Aggregator.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { ethers } from 'ethers';\nimport Alert from './Alert';\nimport { loadBalances, aggregatorSwap } from '../store/interactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Aggregator = () => {\n  _s();\n  const [inputToken, setInputToken] = useState(null);\n  const [outputToken, setOutputToken] = useState(null);\n  const [inputAmount, setInputAmount] = useState(0);\n  const [outputAmount, setOutputAmount] = useState(0);\n  const [showAlert, setShowAlert] = useState(false);\n  const [selectedBestAmm, setSelectedBestAmm] = useState('');\n  const [amm1Rate, setAmm1Rate] = useState('Loading...');\n  const [amm2Rate, setAmm2Rate] = useState('Loading...');\n  const provider = useSelector(state => state.provider.connection);\n  const account = useSelector(state => state.provider.account);\n  const tokens = useSelector(state => state.tokens.contracts);\n  const symbols = useSelector(state => state.tokens.symbols);\n  const balances = useSelector(state => state.tokens.balances);\n  const selectedAmm = useSelector(state => state.amm.selectedAmm);\n  const ammContracts = useSelector(state => state.amm.contracts);\n  const amm = ammContracts[selectedAmm];\n  const aggregatorData = useSelector(state => state.aggregator.ammData);\n  const isSwapping = useSelector(state => state.amm.swapping.isSwapping);\n  const isSuccess = useSelector(state => state.amm.swapping.isSuccess);\n  const transactionHash = useSelector(state => state.amm.swapping.transactionHash);\n  const dispatch = useDispatch();\n  const inputHandler = async e => {\n    if (!inputToken || !outputToken) {\n      window.alert('Please select token');\n      return;\n    }\n    if (inputToken === outputToken) {\n      window.alert('Invalid token pair');\n      return;\n    }\n    const input = e.target.value;\n    setInputAmount(input);\n\n    // Convert input amount to BigNumber using ethers for better precision\n    const inputAmountBigNumber = ethers.utils.parseUnits(input, 'ether');\n    if (selectedBestAmm && aggregatorData[selectedBestAmm]) {\n      const ammRates = aggregatorData[selectedBestAmm];\n      const rate = inputToken === 'DAPP' ? ammRates.rate1to2 : ammRates.rate2to1;\n      const outputAmountBigNumber = inputAmountBigNumber.mul(ethers.utils.parseUnits(rate.toString(), 'ether')).div(ethers.constants.WeiPerEther);\n      const outputAmountFormatted = ethers.utils.formatUnits(outputAmountBigNumber, 'ether');\n      setOutputAmount(outputAmountFormatted);\n    }\n  };\n\n  // Logic to determine the best AMM for swap\n  useEffect(() => {\n    if (inputToken && outputToken && aggregatorData.amm1 && aggregatorData.amm2) {\n      // Calculate which AMM has the best rate\n      const rateAmm1 = inputToken === 'DAPP' ? aggregatorData.amm1.rate1to2 : aggregatorData.amm1.rate2to1;\n      const rateAmm2 = inputToken === 'DAPP' ? aggregatorData.amm2.rate1to2 : aggregatorData.amm2.rate2to1;\n      const bestAmm = rateAmm1 > rateAmm2 ? 'amm1' : 'amm2';\n      setSelectedBestAmm(bestAmm);\n    }\n  }, [inputToken, outputToken, aggregatorData]);\n  useEffect(() => {\n    if (inputToken && outputToken) {\n      const displayRatesAmm1 = inputToken === 'DAPP' ? aggregatorData.amm1.rate1to2 : aggregatorData.amm1.rate2to1;\n      const displayRatesAmm2 = inputToken === 'DAPP' ? aggregatorData.amm2.rate1to2 : aggregatorData.amm2.rate2to1;\n\n      // Set the rates for display\n      setAmm1Rate(displayRatesAmm1);\n      setAmm2Rate(displayRatesAmm2);\n    }\n  }, [inputToken, outputToken, selectedBestAmm, aggregatorData]);\n  const swapHandler = async e => {\n    e.preventDefault();\n    setShowAlert(false);\n    if (inputToken === outputToken) {\n      window.alert('Invalid Token Pair');\n      return;\n    }\n    const _inputAmount = ethers.utils.parseUnits(inputAmount, 'ether');\n    const tokenContract = inputToken === 'DAPP' ? tokens[0] : tokens[1];\n    const tokenSymbol = inputToken;\n\n    // Execute aggregator swap on the selected AMM\n    await aggregatorSwap(provider, selectedBestAmm, ammContracts, tokenContract, tokenSymbol, _inputAmount, dispatch);\n\n    // Optionally reload balances after the swap\n    await loadBalances(amm, tokens, account, dispatch);\n    setShowAlert(true);\n  };\n  const getRateAndBalance = (token1, token2, ammData) => {\n    if (token1 === 'DAPP' && token2 === 'USD') {\n      return {\n        rate: ammData.rate1to2,\n        balance1: ammData.token1Balance,\n        balance2: ammData.token2Balance\n      };\n    } else if (token1 === 'USD' && token2 === 'DAPP') {\n      return {\n        rate: ammData.rate2to1,\n        balance1: ammData.token2Balance,\n        balance2: ammData.token1Balance\n      };\n    } else {\n      return {\n        rate: 0,\n        balance1: 0,\n        balance2: 0\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: '450px'\n      },\n      className: \"mx-auto px-4 card-style\",\n      children: account ? /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: swapHandler,\n        style: {\n          maxWidth: '450px',\n          margin: '50px auto'\n        },\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: \"white\"\n              },\n              children: [\"Wallet Balance: \", inputToken === symbols[0] ? balances[0] : inputToken === symbols[1] ? balances[1] : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"0.0\",\n              min: \"0.0\",\n              step: \"any\",\n              onChange: e => inputHandler(e),\n              disabled: !inputToken,\n              className: \"input-group-custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              variant: \"outline-secondary\",\n              title: inputToken ? inputToken : \"Select Token\",\n              className: \"dropdown-menu\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setInputToken(e.target.innerHTML),\n                children: \"DAPP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setInputToken(e.target.innerHTML),\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: \"white\"\n              },\n              children: [\"Wallet Balance: \", outputToken === symbols[0] ? balances[0] : outputToken === symbols[1] ? balances[1] : 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"0.0\",\n              value: outputAmount === 0 ? \"\" : outputAmount,\n              disabled: true,\n              className: \"input-group-custom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n              variant: \"outline-secondary\",\n              title: outputToken ? outputToken : \"Select Token\",\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setOutputToken(e.target.innerHTML),\n                children: \"DAPP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: e => setOutputToken(e.target.innerHTML),\n                children: \"USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Aggregator Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Currency Pair:     \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [\" \", inputToken, \" / \", outputToken, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), \"Exchange Rate on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"AMM 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 30\n        }, this), \" \", amm1Rate, /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), inputToken, \" Liquidity: \", getRateAndBalance(inputToken, outputToken, aggregatorData.amm1).balance1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), outputToken, \" Liquidity: \", getRateAndBalance(inputToken, outputToken, aggregatorData.amm1).balance2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 19\n        }, this), \"Exchange Rate on \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"AMM 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 30\n        }, this), \"  \", amm2Rate, /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), inputToken, \" Liquidity: \", getRateAndBalance(inputToken, outputToken, aggregatorData.amm2).balance1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), outputToken, \" Liquidity: \", getRateAndBalance(inputToken, outputToken, aggregatorData.amm2).balance2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"my-3\",\n          children: isSwapping ? /*#__PURE__*/_jsxDEV(Spinner, {\n            animation: \"border\",\n            style: {\n              display: 'block',\n              margin: '0 auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn-custom\",\n            children: [\"Swap on: \", selectedBestAmm.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"d-flex justify-content-center align-items-center\",\n        style: {\n          height: '300px'\n        },\n        children: \"Please connect wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), isSwapping ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Pending...',\n      transactionHash: null,\n      variant: 'info',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : isSuccess && showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Successful',\n      transactionHash: transactionHash,\n      variant: 'success',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this) : !isSuccess && showAlert ? /*#__PURE__*/_jsxDEV(Alert, {\n      message: 'Swap Failed',\n      transactionHash: null,\n      variant: 'danger',\n      setShowAlert: setShowAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(Aggregator, \"rtzu65feWh+HFqnJtN+f3Py3EkI=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Aggregator;\nexport default Aggregator;\nvar _c;\n$RefreshReg$(_c, \"Aggregator\");","map":{"version":3,"names":["useState","useEffect","useSelector","useDispatch","Card","Form","InputGroup","Dropdown","DropdownButton","Button","Row","Spinner","ethers","Alert","loadBalances","aggregatorSwap","jsxDEV","_jsxDEV","Fragment","_Fragment","Aggregator","_s","inputToken","setInputToken","outputToken","setOutputToken","inputAmount","setInputAmount","outputAmount","setOutputAmount","showAlert","setShowAlert","selectedBestAmm","setSelectedBestAmm","amm1Rate","setAmm1Rate","amm2Rate","setAmm2Rate","provider","state","connection","account","tokens","contracts","symbols","balances","selectedAmm","amm","ammContracts","aggregatorData","aggregator","ammData","isSwapping","swapping","isSuccess","transactionHash","dispatch","inputHandler","e","window","alert","input","target","value","inputAmountBigNumber","utils","parseUnits","ammRates","rate","rate1to2","rate2to1","outputAmountBigNumber","mul","toString","div","constants","WeiPerEther","outputAmountFormatted","formatUnits","amm1","amm2","rateAmm1","rateAmm2","bestAmm","displayRatesAmm1","displayRatesAmm2","swapHandler","preventDefault","_inputAmount","tokenContract","tokenSymbol","getRateAndBalance","token1","token2","balance1","token1Balance","balance2","token2Balance","children","style","maxWidth","className","onSubmit","margin","Label","fileName","_jsxFileName","lineNumber","columnNumber","Text","color","Control","type","placeholder","min","step","onChange","disabled","variant","title","Item","onClick","innerHTML","animation","display","toUpperCase","height","message","_c","$RefreshReg$"],"sources":["/Users/nicholasmakdessi/Desktop/Blockchain/Mentorship/capstone/aggregator/src/components/Aggregator.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { ethers } from 'ethers';\n\nimport Alert from './Alert';\nimport {loadBalances, aggregatorSwap } from '../store/interactions';\n\nconst Aggregator = () => {\n  const [inputToken, setInputToken] = useState(null);\n  const [outputToken, setOutputToken] = useState(null);\n  const [inputAmount, setInputAmount] = useState(0);\n  const [outputAmount, setOutputAmount] = useState(0);\n  const [showAlert, setShowAlert] = useState(false);\n  const [selectedBestAmm, setSelectedBestAmm] = useState('');\n  const [amm1Rate, setAmm1Rate] = useState('Loading...');\n  const [amm2Rate, setAmm2Rate] = useState('Loading...');\n\n\n  const provider = useSelector(state => state.provider.connection);\n  const account = useSelector(state => state.provider.account);\n  const tokens = useSelector(state => state.tokens.contracts);\n  const symbols = useSelector(state => state.tokens.symbols);\n  const balances = useSelector(state => state.tokens.balances);\n\n\n  const selectedAmm = useSelector(state => state.amm.selectedAmm);\n  const ammContracts = useSelector(state => state.amm.contracts);\n  const amm = ammContracts[selectedAmm];\n\n  const aggregatorData = useSelector(state => state.aggregator.ammData);\n\n  const isSwapping = useSelector(state => state.amm.swapping.isSwapping);\n  const isSuccess = useSelector(state => state.amm.swapping.isSuccess);\n  const transactionHash = useSelector(state => state.amm.swapping.transactionHash);\n\n  const dispatch = useDispatch();\n\n\n  const inputHandler = async (e) => {\n    if (!inputToken || !outputToken) {\n      window.alert('Please select token');\n      return;\n    }\n  \n    if (inputToken === outputToken) {\n      window.alert('Invalid token pair');\n      return;\n    }\n  \n    const input = e.target.value;\n    setInputAmount(input);\n  \n    // Convert input amount to BigNumber using ethers for better precision\n    const inputAmountBigNumber = ethers.utils.parseUnits(input, 'ether');\n  \n    if (selectedBestAmm && aggregatorData[selectedBestAmm]) {\n      const ammRates = aggregatorData[selectedBestAmm];\n      const rate = inputToken === 'DAPP' ? ammRates.rate1to2 : ammRates.rate2to1;\n      const outputAmountBigNumber = inputAmountBigNumber.mul(ethers.utils.parseUnits(rate.toString(), 'ether')).div(ethers.constants.WeiPerEther);\n      const outputAmountFormatted = ethers.utils.formatUnits(outputAmountBigNumber, 'ether');\n      setOutputAmount(outputAmountFormatted);\n    }\n  };\n\n  // Logic to determine the best AMM for swap\n  useEffect(() => {\n    if (inputToken && outputToken && aggregatorData.amm1 && aggregatorData.amm2) {\n      // Calculate which AMM has the best rate\n      const rateAmm1 = inputToken === 'DAPP' ? aggregatorData.amm1.rate1to2 : aggregatorData.amm1.rate2to1;\n      const rateAmm2 = inputToken === 'DAPP' ? aggregatorData.amm2.rate1to2 : aggregatorData.amm2.rate2to1;\n\n      const bestAmm = rateAmm1 > rateAmm2 ? 'amm1' : 'amm2';\n      setSelectedBestAmm(bestAmm);\n    }\n  }, [inputToken, outputToken, aggregatorData]);\n\n  useEffect(() => {\n    if (inputToken && outputToken) {\n      const displayRatesAmm1 = inputToken === 'DAPP' ? aggregatorData.amm1.rate1to2 : aggregatorData.amm1.rate2to1;\n      const displayRatesAmm2 = inputToken === 'DAPP' ? aggregatorData.amm2.rate1to2 : aggregatorData.amm2.rate2to1;\n\n      // Set the rates for display\n      setAmm1Rate(displayRatesAmm1);\n      setAmm2Rate(displayRatesAmm2);\n    }\n  }, [inputToken, outputToken, selectedBestAmm, aggregatorData]);\n\n  const swapHandler = async (e) => {\n    e.preventDefault();\n    setShowAlert(false);\n  \n    if (inputToken === outputToken) {\n      window.alert('Invalid Token Pair');\n      return;\n    }\n  \n    const _inputAmount = ethers.utils.parseUnits(inputAmount, 'ether');\n    const tokenContract = inputToken === 'DAPP' ? tokens[0] : tokens[1];\n    const tokenSymbol = inputToken;\n  \n    // Execute aggregator swap on the selected AMM\n    await aggregatorSwap(provider, selectedBestAmm, ammContracts, tokenContract, tokenSymbol, _inputAmount, dispatch);\n  \n    // Optionally reload balances after the swap\n    await loadBalances(amm, tokens, account, dispatch);\n  \n    setShowAlert(true);\n  };\n\n\n\n  const getRateAndBalance = (token1, token2, ammData) => {\n    if (token1 === 'DAPP' && token2 === 'USD') {\n      return { rate: ammData.rate1to2, balance1: ammData.token1Balance, balance2: ammData.token2Balance };\n    } else if (token1 === 'USD' && token2 === 'DAPP') {\n      return { rate: ammData.rate2to1, balance1: ammData.token2Balance, balance2: ammData.token1Balance };\n    } else {\n      return { rate: 0, balance1: 0, balance2: 0 };\n    }\n  };\n\n\n\n  return (\n    <div>\n      <Card style={{ maxWidth: '450px' }} className='mx-auto px-4 card-style'>\n        {account ? (\n\n          <Form onSubmit={swapHandler} style={{ maxWidth: '450px', margin: '50px auto' }} className='form-control'>\n\n            <Row className='my-3'>\n              <div className='d-flex justify-content-between'>\n                <Form.Label><strong>Input:</strong></Form.Label>\n                <Form.Text style={{color:\"white\"}}>\n                  Wallet Balance: {\n                    inputToken === symbols[0] ? (\n                      balances[0]\n                    ) : inputToken === symbols[1] ? (\n                      balances[1]\n                    ) : 0\n                  }\n                </Form.Text>\n\n              </div>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  min=\"0.0\"\n                  step=\"any\"\n                  onChange={(e) => inputHandler(e)}\n                  disabled={!inputToken}\n                  className='input-group-custom'\n                />\n                <DropdownButton\n                  variant=\"outline-secondary\"\n                  title={inputToken ? inputToken : \"Select Token\"}\n                  className='dropdown-menu'\n                >\n                  <Dropdown.Item onClick={(e) => setInputToken(e.target.innerHTML)} >DAPP</Dropdown.Item>\n                  <Dropdown.Item onClick={(e) => setInputToken(e.target.innerHTML)} >USD</Dropdown.Item>\n                </DropdownButton>\n              </InputGroup>\n            </Row>\n\n            <Row className='my-4'>\n              <div className='d-flex justify-content-between'>\n                <Form.Label><strong>Output:</strong></Form.Label>\n                <Form.Text style={{color:\"white\"}}>\n                Wallet Balance: {\n                    outputToken === symbols[0] ? (\n                      balances[0]\n                    ) : outputToken === symbols[1] ? (\n                      balances[1]\n                    ) : 0\n                  }\n                </Form.Text>\n\n              </div>\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  placeholder=\"0.0\"\n                  value={outputAmount === 0 ? \"\" : outputAmount}\n                  disabled\n                  className='input-group-custom'\n\n                />\n                <DropdownButton\n                  variant=\"outline-secondary\"\n                  title={outputToken ? outputToken : \"Select Token\"}\n                >\n                  <Dropdown.Item onClick={(e) => setOutputToken(e.target.innerHTML)}>DAPP</Dropdown.Item>\n                  <Dropdown.Item onClick={(e) => setOutputToken(e.target.innerHTML)}>USD</Dropdown.Item>\n                </DropdownButton>\n              </InputGroup>\n            </Row>\n\n            <hr />\n            <h5 >Aggregator Info</h5>\n\n            <br></br>\n\n\n            <p>\n              Currency Pair:     <b> {inputToken} / {outputToken} </b>\n            </p>\n\n            Exchange Rate on <strong>AMM 1:</strong> {amm1Rate}\n            <Form.Text >\n              <br></br>\n              {inputToken} Liquidity: {\n                getRateAndBalance(inputToken, outputToken, aggregatorData.amm1).balance1\n              }\n            </Form.Text>\n\n            <Form.Text >\n              <br></br>\n              {outputToken} Liquidity: {\n                getRateAndBalance(inputToken, outputToken, aggregatorData.amm1).balance2\n              }\n            </Form.Text>\n            <br /><br />\n\n\n            Exchange Rate on <strong>AMM 2:</strong>  {amm2Rate}\n            <Form.Text >\n              <br></br>\n              {inputToken} Liquidity: {\n                getRateAndBalance(inputToken, outputToken, aggregatorData.amm2).balance1\n              }\n            </Form.Text>\n\n            <Form.Text >\n              <br></br>\n              {outputToken} Liquidity: {\n                getRateAndBalance(inputToken, outputToken, aggregatorData.amm2).balance2\n              }\n            </Form.Text>\n\n            <Row className='my-3'>\n              {isSwapping ? (\n                <Spinner animation=\"border\" style={{ display: 'block', margin: '0 auto' }} />\n              ) : (\n                <Button type='submit' className='btn-custom'>Swap on: {selectedBestAmm.toUpperCase()}</Button>\n              )}\n\n\n            </Row>\n\n          </Form>\n\n        ) : (\n          <p\n            className='d-flex justify-content-center align-items-center'\n            style={{ height: '300px' }}\n          >\n            Please connect wallet.\n          </p>\n        )}\n      </Card>\n\n      {isSwapping ? (\n        <Alert\n          message={'Swap Pending...'}\n          transactionHash={null}\n          variant={'info'}\n          setShowAlert={setShowAlert}\n        />\n      ) : isSuccess && showAlert ? (\n        <Alert\n          message={'Swap Successful'}\n          transactionHash={transactionHash}\n          variant={'success'}\n          setShowAlert={setShowAlert}\n        />\n      ) : !isSuccess && showAlert ? (\n        <Alert\n          message={'Swap Failed'}\n          transactionHash={null}\n          variant={'danger'}\n          setShowAlert={setShowAlert}\n        />\n      ) : (\n        <></>\n      )}\n\n    </div>\n  );\n}\n\nexport default Aggregator;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}